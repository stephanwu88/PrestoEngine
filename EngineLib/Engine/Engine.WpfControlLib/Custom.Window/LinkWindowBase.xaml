<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Engine.WpfControl"
                    xmlns:WpfBase="clr-namespace:Engine.WpfBase"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:h="QQ:178876839" >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Custom.Control/FButton.xaml"/>
        <ResourceDictionary Source="WindowBase.xaml"/>
        <ResourceDictionary Source="MainWindowBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--链接窗口  默认样式-->
    <Style x:Key="S.Window.Link.Default" TargetType="{x:Type local:LinkWindowBase}"  BasedOn="{StaticResource S.Window.Main.Default}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CaptionHeight" Value="76"/>
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="WpfBase:Cattach.VisibleActions">
            <Setter.Value>
                <WpfBase:ActionCollection>
                    <WpfBase:TranslateAction StartPoint="0,150" VisibleDuration="1000" EndPoint="0,150"/>
                </WpfBase:ActionCollection>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LinkWindowBase}">
                    <Viewbox Stretch="Fill">
                        <Grid Name="g_all" Width="1920" Height="1040" Margin="{TemplateBinding Padding}">
                            <WpfBase:Interaction.Triggers>
                                <WpfBase:EventTrigger EventName="Loaded">
                                    <WpfBase:InvokeCommandAction Command="{Binding LoadedCommand}"/>
                                </WpfBase:EventTrigger>
                            </WpfBase:Interaction.Triggers>
                            <!--Margin="2,0,2,2"-->
                            <!--背景-->
                            <Border x:Name="Bg"
                  CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                  Background="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Effect="{DynamicResource S.DropShadowEffect.Window}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <!--<Border.Effect>
                                    <DropShadowEffect
                      Color="Red"  
                      BlurRadius="20" ShadowDepth="0" Direction="270" Opacity="0.8" RenderingBias="Performance"/>
                                </Border.Effect>-->
                            </Border>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="20" Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <!--Caption标题部分-->
                                <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Top}">
                                    <Grid Margin="2,1,2,0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="250"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Border Grid.ColumnSpan="10" Grid.RowSpan="2">
                                            <Border.Background>
                                                <ImageBrush ImageSource="/HeBianGu.General.WpfControlLib;component/Resources/Cover.png"/>
                                            </Border.Background>
                                        </Border>
                                        <!--Header部分-->
                                        <StackPanel x:Name="PART_Header" Height="{TemplateBinding CaptionHeight}" HorizontalAlignment="Left" Margin="15,1,15,1" Orientation="Horizontal" VerticalAlignment="Center">
                                            <Image Margin="5,20" Source="{TemplateBinding Logo}" />
                                        </StackPanel>

                                        <!--菜单页部分-->

                                        <ScrollViewer Grid.Column="1" Style="{DynamicResource S.ScrollView.Center.Default}" FontSize="20"  WindowChrome.IsHitTestVisibleInChrome="True"
                                  WpfBase:Cattach.MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}" HorizontalAlignment="Left"
                                  WpfBase:Cattach.PressForeground="{DynamicResource S.Brush.TextForeground.White}"
                                  Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}" Padding="20,0">
                                            <ListBox x:Name="list"  Grid.Column="1" Background="Transparent"
                        BorderBrush="Transparent" SelectedIndex="0"
                        SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}"
                        ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=TabLinks}" Margin="-2"
                        WindowChrome.IsHitTestVisibleInChrome="True" >

                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel HorizontalAlignment="Left" Orientation="Horizontal"/>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="{x:Type ListBoxItem}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                    <Grid Width="218">
                                                                        <Border x:Name="border" Background="Transparent">
                                                                            <Grid>
                                                                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                                    <TextBlock Style="{DynamicResource S.TextBlock.FIcon}"
                                             Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}"
                                             FontSize="30"
                                             Text="{Binding Logo}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"/>

                                                                                    <TextBlock Text="{Binding DisplayName}"
                                             Margin="8,0,0,0" FontSize="18" VerticalAlignment="Center"
                                             Foreground="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}"/>
                                                                                </StackPanel>

                                                                                <Border x:Name="bord_selected"  Visibility="Collapsed" VerticalAlignment="Top" Background="{Binding RelativeSource={RelativeSource AncestorType=local:LinkWindowBase},Path=CaptionForeground}" Height="5"/>

                                                                            </Grid>
                                                                        </Border>
                                                                    </Grid>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsSelected" Value="true">
                                                                            <Setter Property="Background" Value="{DynamicResource S.Brush.TextForeground.White.Opacity.4}" TargetName="border"/>
                                                                            <Setter Property="Visibility" Value="Visible" TargetName="bord_selected"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver" Value="true">
                                                                            <Setter Property="Background" Value="{DynamicResource S.Brush.TextForeground.White.Opacity.2}" TargetName="border"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                            </ListBox>
                                        </ScrollViewer>

                                        <ItemsControl Grid.Column="2" Margin="57,0" Background="Purple"
                              HorizontalAlignment="Center" VerticalAlignment="Center"
                              WindowChrome.IsHitTestVisibleInChrome="True"
                              ItemsSource="{TemplateBinding SettingLinks}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel>
                                                    </StackPanel>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <ItemContainerTemplate>
                                                    <local:FButton Style="{DynamicResource S.FButton.Style.Transparent}"
                                     HorizontalAlignment="Center" FIcon="{Binding Logo}"
                                     VerticalAlignment="Center" FIconMargin="0,2,5,0"
                                     Width="100" FontSize="18" Foreground="{DynamicResource S.Brush.White.Notice}"
                                     Command="{Binding Path=SettimgWindowCommand,RelativeSource={ RelativeSource AncestorType=local:WindowBase}}"
                                     CommandParameter="{Binding Source}"></local:FButton>
                                                    <!--Content="{Binding DisplayName}"/>-->

                                                </ItemContainerTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>

                                        <!--窗体功能按钮：最小、最大、关闭-->
                                        <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Margin="10,0"  HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type local:FButton}" BasedOn="{StaticResource S.FButton.Style.Transparent}">
                                                    <Setter  Property="Margin" Value="10,0"/>
                                                    <Setter  Property="Width" Value="{DynamicResource S.Window.ItemHeight}"/>
                                                    <Setter  Property="MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                    <Setter  Property="PressedForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                    <Setter  Property="FIconSize" Value="15"/>
                                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CaptionForeground}"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Opacity" Value="0.6"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </StackPanel.Resources>

                                            <ToggleButton x:Name="btnTheme"  Width="{DynamicResource S.Window.ItemHeight}"  VerticalAlignment="Center" Margin="5,0"   ToolTip="更换主题颜色"
                         Visibility="{Binding Path=SetboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                        Style="{DynamicResource S.ToggleButton.BrushFIconChecked}" WpfBase:Cattach.FIcon="&#xe6d2;"  WpfBase:Cattach.FIconSize="25"
                         WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"/>


                                            <local:FButton x:Name="btnNotify"   FIcon="&#xe659;" ToolTip="隐藏到托盘"  Command="{Binding Path=NotifyWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnMin"  Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                        FIcon="&#xe61d;"   Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnMax"
                          Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                         Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                            <local:FButton x:Name="btnClose" Width="{DynamicResource S.Window.Item.Height}" Margin="10,0" FIconSize="15" Foreground="{DynamicResource S.Brush.TextForeground.White}"
                         MouseOverBackground="Red" MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}"  PressedForeground="{DynamicResource S.Brush.TextForeground.White}"
                         AllowsAnimation="True"  FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}"
                         Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </StackPanel>


                                    </Grid>
                                </Border>

                                <Border x:Name="BgInner" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Bottom}"
                    Background="{TemplateBinding Background}" Grid.Row="1" Margin="1,0,1,1" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >

                                    <!--窗体内容区域-->
                                    <AdornerDecorator  WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Grid>
                                            <!--托盘图标-->
                                            <local:NotifyIcon x:Name="PART_NotifyIcon"
                                      Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}"
                                      Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                      Text="{TemplateBinding Title}"
                                      IconVisibility="Visible">

                                                <FrameworkElement.ContextMenu>
                                                    <ContextMenu >
                                                        <MenuItem Header="显示面板" />
                                                        <MenuItem Header="退出" />
                                                    </ContextMenu>
                                                </FrameworkElement.ContextMenu>
                                            </local:NotifyIcon>

                                            <local:DrawerHost HorizontalContentAlignment="Stretch">
                                                <local:DrawerHost.LeftDrawerContent>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="35"/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>

                                                        <Border Background="{DynamicResource S.Brush.Dark.Notice}" BorderThickness="0,0,0,0"/>

                                                        <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.LeftLink.Logo}"
                                     HorizontalAlignment="Left" Margin="8,0" FIconSize="12"
                                     Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Left}"
                                     Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.LeftLink.DisplayName}"
                                     Style="{DynamicResource S.FButton.Style.Transparent}"/>

                                                        <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}"
                                                 LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.LeftLink}"/>


                                                        <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"
                                     FIcon="&#xe9cd;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Left}"
                                     FIconSize="14" Margin="5,0"
                                     HorizontalAlignment="Right"  VerticalAlignment="Center"/>
                                                    </Grid>
                                                </local:DrawerHost.LeftDrawerContent>
                                                <local:DrawerHost.TopDrawerContent>
                                                    <Grid>
                                                        <Border Background="{DynamicResource S.Brush.Gray.Notice}" BorderThickness="0,0,0,0"/>

                                                        <!--<ContentPresenter Grid.Row="1"  Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.ActionResult.View}"/>-->

                                                        <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink}"/>

                                                        <!--<local:ModernFrame Grid.Row="1" Margin="0,0" BorderBrush="Transparent" BorderThickness="0"
                                                                   Source="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.Source}"/>-->

                                                        <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"
                                     FIcon="&#xe9d3;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Top}"
                                     FIconSize="14" Margin="5,5"
                                     HorizontalAlignment="Right"  VerticalAlignment="Bottom"/>

                                                        <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.Logo}"
                                     HorizontalAlignment="Right" Margin="30,0" FIconSize="12"
                                      Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Top}"
                                     Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.TopLink.DisplayName}"
                          Style="{DynamicResource S.FButton.Style.Transparent}"/>
                                                    </Grid>
                                                </local:DrawerHost.TopDrawerContent>
                                                <local:DrawerHost.BottomDrawerContent>
                                                    <Grid>
                                                        <Border Background="{DynamicResource S.Brush.Dark.2}" BorderThickness="0,0,0,0"/>

                                                        <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}"  LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.BottomLink}"/>

                                                        <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"
                                     FIcon="&#xe9cc;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Bottom}"
                                     FIconSize="14" Margin="5,5"
                                     HorizontalAlignment="Right"  VerticalAlignment="Top"/>

                                                        <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.BottomLink.Logo}"
                                     HorizontalAlignment="Right" Margin="8,3" FIconSize="12" VerticalAlignment="Bottom"
                                      Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Bottom}"
                                     Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.BottomLink.DisplayName}"
                          Style="{DynamicResource S.FButton.Style.Transparent}"/>
                                                    </Grid>
                                                </local:DrawerHost.BottomDrawerContent>
                                                <local:DrawerHost.RightDrawerContent>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="35"/>
                                                            <RowDefinition/>
                                                        </Grid.RowDefinitions>

                                                        <Border Background="{DynamicResource S.Brush.Gray.Notice}" BorderThickness="0,0,0,0"/>

                                                        <local:FButton FIcon="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.RightLink.Logo}"
                                     HorizontalAlignment="Right" Margin="8,0" FIconSize="12"
                                      Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Right}"
                                     Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.RightLink.DisplayName}"
                          Style="{DynamicResource S.FButton.Style.Transparent}"/>

                                                        <local:LinkActionFrame Grid.Row="1" Style="{DynamicResource S.LinkActonFrame.Single}"  LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink.RightLink}"/>

                                                        <local:FButton Grid.Row="0" Style="{DynamicResource S.FButton.Style.Transparent}"
                                     FIcon="&#xe9ce;" AllowsAnimation="True" Command="{x:Static local:DrawerHost.CloseDrawerCommand}"
                                     CommandParameter="{x:Static Dock.Right}"
                                     FIconSize="14" Margin="5,0"
                                     HorizontalAlignment="Left"  VerticalAlignment="Center"/>
                                                    </Grid>
                                                </local:DrawerHost.RightDrawerContent>

                                                <Grid>
                                                    <!--整体消息弹出-->
                                                    <local:DialogHost Identifier="windowDialog" HorizontalAlignment="Stretch" Effect="{TemplateBinding AdornerDecoratorEffect}"  VerticalAlignment="Stretch" Margin="-3,0,-3,-3">
                                                        <Grid>
                                                            <local:LinkActionFrame UseRandomWipe="False" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}"/>

                                                            <!--蒙版-->
                                                            <local:ContainPanel Background="{DynamicResource S.Brush.Dialog.Cover}" Visibility="Collapsed" x:Name="PART_LAYERGROUP">
                                                                <local:ContainPanel.AnimationAction>
                                                                    <WpfBase:ScaleAction/>
                                                                </local:ContainPanel.AnimationAction>
                                                            </local:ContainPanel>

                                                        </Grid>
                                                    </local:DialogHost>

                                                    <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1"/>

                                                    <local:Snackbar MessageQueue="{local:MessageQueue}" x:Name="PART_SnackBar" />
                                                </Grid>
                                            </local:DrawerHost>
                                        </Grid>
                                    </AdornerDecorator>

                                </Border>
                                <Popup x:Name="Pop" PopupAnimation="Slide" IsOpen="{Binding ElementName=btnTheme,Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=btnTheme}" Placement="Top"
                       AllowsTransparency="True" StaysOpen="False" HorizontalAlignment="Left" VerticalAlignment="Bottom">

                                    <Border Background="{DynamicResource S.Brush.Accent.Opacity.5}"
                          CornerRadius="5" BorderBrush="{DynamicResource S.Brush.Accent}"
                          BorderThickness="1">
                                        <StackPanel Margin="10">
                                            <!--<local:ThemeSetControl Foreground="{TemplateBinding CaptionForeground}"/>-->
                                        </StackPanel>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Grid>
                    </Viewbox>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe665;"></Setter>
                            <Setter Property="Padding"  Value="0"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>

                        <!--淡出动画-->

                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--<Style x:Key="S.Window.Link.Single" TargetType="{x:Type local:LinkWindowBase}" BasedOn="{StaticResource S.Window.Link.Default}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="h:Cattach.VisibleActions">
            <Setter.Value>
                <h:ActionCollection>
                    <h:ScaleGeomotryAction VisibleDuration="1500" HideDuration="1000" PointOriginType="MouseInnerOrCenter"/>
                </h:ActionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LinkWindowBase}">
                    <Viewbox>
                        <Grid Name="g_all" Width="1280" Height="800">
                            --><!--背景--><!--
                            <Border x:Name="Bg" 
                                CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" 
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Padding}"
                                Effect="{DynamicResource S.DropShadowEffect.Window}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            </Border>

                            --><!--<Border x:Name="BgInner" CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" 
                                  Background="{TemplateBinding Background}"  
                                  BorderThickness="{TemplateBinding BorderThickness}" 
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            </Border>--><!--

                            <Grid  Margin="{TemplateBinding Padding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition MinHeight="0" Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                --><!--窗体内容区域--><!--
                                <AdornerDecorator Grid.Row="1" Margin="1" WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid>
                                        --><!--托盘图标--><!--
                                        <local:NotifyIcon x:Name="PART_NotifyIcon" 
                                                          Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}" 
                                                          Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                                          Text="{TemplateBinding Title}"
                                                          IconVisibility="Visible">

                                            <FrameworkElement.ContextMenu>
                                                <ContextMenu >
                                                    <MenuItem Header="显示面板" Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                    <MenuItem Header="隐藏"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                    <MenuItem Header="退出"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CloseWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ContextMenu>
                                            </FrameworkElement.ContextMenu>
                                        </local:NotifyIcon>

                                        <local:DrawerHost HorizontalContentAlignment="Stretch">

                                            <Grid>
                                                --><!--整体消息弹出--><!--
                                                <local:DialogHost Identifier="windowDialog" local:ShadowAssist.ShadowDepth="{DynamicResource S.EffectShadow.1}"  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-3,0,-3,-3">
                                                    --><!--<h:DialogHost.Effect>
                                                        <BlurEffect Radius="10" RenderingBias="Performance"></BlurEffect>
                                                    </h:DialogHost.Effect>--><!--
                                                    <Grid>
                                                        <local:LinkActionFrame UseRandomWipe="False" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}">

                                                            <local:LinkActionFrame.CurrentWipe>
                                                                <local:CircleWipe PointOriginType="MousePosition" MidTime="00:00:00.05" Duration="00:00:00.4"/>
                                                            </local:LinkActionFrame.CurrentWipe>
                                                        </local:LinkActionFrame>

                                                        --><!--第一次蒙版-->
                                                        <!--
                                                        <local:ModernFrame  Visibility="Collapsed"  x:Name="PART_SettingFrame">
                                                            <local:ModernFrame.Background>
                                                                <SolidColorBrush Color="#000000" Opacity="0.5"/>
                                                            </local:ModernFrame.Background>
                                                        </local:ModernFrame>-->

                                                        <!--<local:LinkActionFrame x:Name="PART_LinkActionFrame"  Visibility="Collapsed"  UseRandomWipe="True"/>-->

                                                        <!--<local:SwtichTransitioner  x:Name="PART_LAYERGROUP"  Visibility="Collapsed"
                                                                                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                            <local:SwtichTransitioner.Background>
                                                                <SolidColorBrush Color="#000000" Opacity="0.5"/>
                                                            </local:SwtichTransitioner.Background>
                                                            <local:SwtichTransitioner.ITransitionWipe>
                                                                -->
                                                        <!--<h:SlideWipe Direction="Up"/>-->
                                                        <!--
                                                                <local:SlideOutScale/>
                                                            </local:SwtichTransitioner.ITransitionWipe>
                                                        </local:SwtichTransitioner>-->

                                                        <!--蒙版--><!--
                                                        <local:ContainPanel Background="{DynamicResource S.Brush.Dialog.Cover}" Visibility="Collapsed" x:Name="PART_LAYERGROUP">
                                                            <local:ContainPanel.AnimationAction>
                                                                <h:ScaleAction/>
                                                            </local:ContainPanel.AnimationAction>
                                                        </local:ContainPanel>

                                                    </Grid>
                                                </local:DialogHost>

                                                <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1"/>

                                                <local:Snackbar MessageQueue="{h:MessageQueue}" x:Name="PART_SnackBar" Margin="0,0,0,-50"/>
                                            </Grid>
                                        </local:DrawerHost>
                                    </Grid>
                                </AdornerDecorator>

                            </Grid>
                        </Grid>
                    </Viewbox>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="Padding"  Value="0"></Setter>
                        </Trigger>

                        --><!--淡出动画-->
                        <!--
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>--><!--
                    </ControlTemplate.Triggers>

                    --><!--<ControlTemplate.Triggers>
                        -->
                    <!--淡出动画-->
                    <!--
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>--><!--
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.Window.Link.Disk" TargetType="{x:Type local:LinkWindowBase}" BasedOn="{StaticResource S.Window.Main.Default}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CaptionHeight" Value="76"/>
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Dark.2}" />
        <Setter Property="h:Cattach.VisibleActions">
            <Setter.Value>
                <h:ActionCollection>
                    <h:ImageOpacityMaskAction VisibleDuration="1500" HideDuration="1000" ImageSource="/Engine.WpfControl;component/Resources/logo.png"/>
                </h:ActionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LinkWindowBase}">

                    <Grid Name="g_all" >
                        --><!--背景--><!--
                        <Border x:Name="Bg"
                  CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                  Background="{TemplateBinding Background}"  Margin="{TemplateBinding Padding}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Effect="{StaticResource S.DropShadowEffect.Window}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            --><!--<Border.Effect>
                                <DropShadowEffect 
                      Color="Red"  
                      BlurRadius="20" ShadowDepth="0" Direction="270" Opacity="0.8" RenderingBias="Performance" po:Freeze="True" />
                            </Border.Effect>--><!--
                        </Border>

                        <Grid  Margin="{TemplateBinding Padding}">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="20" Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            --><!--Caption标题部分--><!--
                            <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Top}">
                                <Grid Margin="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="170"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    --><!--Header部分--><!--
                                    <Grid x:Name="PART_Header" Background="{DynamicResource S.Brush.Accent}" Width="120" Height="30" HorizontalAlignment="Center" Margin="-25,1" VerticalAlignment="Center">
                                        <Grid.OpacityMask>
                                            <ImageBrush ImageSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Logo}"/>
                                        </Grid.OpacityMask>
                                        --><!--<Image Margin="5,20" Source="{TemplateBinding Logo}" Stretch="Fill" Width="120" Height="30"/>--><!--
                                    </Grid>

                                    --><!--菜单页部分--><!--

                                    <Border BorderThickness="0,0,0,1" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Top}" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}" Grid.ColumnSpan="4"/>

                                    <ListBox x:Name="list"  Grid.Column="1" BorderBrush="Transparent" SelectedIndex="0" Foreground="{TemplateBinding CaptionForeground}"
                        SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}" VerticalAlignment="Center"
                        ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=TabLinks}" Margin="-2">
                                        <ListBox.Resources>
                                            <DataTemplate DataType="{x:Type local:TabLink}">
                                                <Grid>
                                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"  Orientation="Horizontal" WindowChrome.IsHitTestVisibleInChrome="True">
                                                        <TextBlock x:Name="tb_logo" Text="{Binding Logo}" Style="{DynamicResource S.TextBlock.FIcon}" Margin="0,0,0,10"/>
                                                        <TextBlock Text="{Binding DisplayName}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </Grid>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Logo}" Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed" TargetName="tb_logo"/>
                                                    </DataTrigger>
                                                    --><!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="true">
                                                        <Setter Property="for" Value="Collapsed" TargetName="tb_logo"/>
                                                    </DataTrigger>--><!--
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ListBox.Resources>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>

                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem">
                                                <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Header}"/>
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=local:WindowBase},Path=CaptionForeground }"/>
                                                <Setter Property="Padding" Value="20,0,0,0"/>
                                                <Setter Property="Height" Value="45"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Grid VerticalAlignment="Center" Height="{TemplateBinding Height}"  Margin="{TemplateBinding Padding}">
                                                                <Border x:Name="underline"  BorderThickness="0,0,0,1.5" BorderBrush="{TemplateBinding Foreground}"/>
                                                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="Left"  Margin="15,0" />
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsSelected" Value="false">
                                                                    <Setter TargetName="underline" Property="BorderThickness" Value="0,0,0,0"/>
                                                                </Trigger>

                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter TargetName="underline" Property="BorderThickness" Value="0,0,0,0"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White.Opacity.5}"/>
                                                                </Trigger>

                                                                <Trigger Property="IsSelected" Value="true">
                                                                    <Setter TargetName="underline" Property="BorderThickness" Value="0,0,0,1.5"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>

                                    --><!--窗体功能按钮：最小、最大、关闭--><!--
                                    <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True" Margin="10,0"  HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">
                                        <StackPanel.Resources>
                                            <Style TargetType="{x:Type local:FButton}" BasedOn="{StaticResource S.FButton.Style.Transparent}">
                                                <Setter  Property="Margin" Value="10,0"/>
                                                <Setter  Property="Width" Value="{DynamicResource S.Window.ItemHeight}"/>
                                                <Setter  Property="MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                <Setter  Property="PressedForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                <Setter  Property="FIconSize" Value="{DynamicResource S.FIcon.Size.Default}"/>
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CaptionForeground}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="0.6"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Resources>

                                        <ToggleButton x:Name="btnTheme"  Width="{DynamicResource S.Window.ItemHeight}"  VerticalAlignment="Center" Margin="15,0"   ToolTip="更换主题颜色"
                         Visibility="{Binding Path=SetboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                        Style="{DynamicResource S.ToggleButton.BrushFIconChecked}" h:Cattach.FIcon="&#xe6d2;"  h:Cattach.FIconSize="20"
                         WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"/>

                                        <local:FButton x:Name="btnMin"  Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                        FIcon="&#xe61d;"   Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnMax"
                          Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                         Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnClose" Width="{DynamicResource S.Window.Item.Height}" Margin="10,0" FIconSize="15" Foreground="{TemplateBinding CaptionForeground}"
                         MouseOverBackground="Red" MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}"  PressedForeground="{DynamicResource S.Brush.TextForeground.White}"
                         AllowsAnimation="True"  FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}"
                         Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>

                                </Grid>
                            </Border>

                            <Border x:Name="BgInner" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Bottom}"
                    Background="{TemplateBinding Background}" Grid.Row="1" Margin="0" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >

                                --><!--窗体内容区域--><!--
                                <AdornerDecorator  WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid>
                                        --><!--托盘图标--><!--
                                        <local:NotifyIcon x:Name="PART_NotifyIcon"
                                      Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}"
                                      Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                      Text="{TemplateBinding Title}"
                                      IconVisibility="Visible">

                                            <FrameworkElement.ContextMenu>
                                                <ContextMenu >
                                                    <MenuItem Header="显示面板" Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                    <MenuItem Header="隐藏"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                    <MenuItem Header="退出"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CloseWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ContextMenu>
                                            </FrameworkElement.ContextMenu>
                                        </local:NotifyIcon>

                                        <local:DrawerHost HorizontalContentAlignment="Stretch">

                                            <Grid>
                                                --><!--整体消息弹出--><!--
                                                <local:DialogHost Identifier="windowDialog" HorizontalAlignment="Stretch" Effect="{TemplateBinding AdornerDecoratorEffect}"  VerticalAlignment="Stretch" Margin="-3,0,-3,-3">
                                                    <Grid>
                                                        <local:LinkActionFrame UseRandomWipe="False" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}"/>
                                                        --><!--蒙版--><!--
                                                        <local:ContainPanel Background="{DynamicResource S.Brush.Dialog.Cover}" Visibility="Collapsed" x:Name="PART_LAYERGROUP">
                                                            <local:ContainPanel.AnimationAction>
                                                                <h:ScaleAction/>
                                                            </local:ContainPanel.AnimationAction>
                                                        </local:ContainPanel>

                                                    </Grid>
                                                </local:DialogHost>

                                                <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1"/>

                                                <local:Snackbar MessageQueue="{local:MessageQueue}" x:Name="PART_SnackBar" />
                                            </Grid>
                                        </local:DrawerHost>
                                    </Grid>
                                </AdornerDecorator>

                            </Border>
                            <Popup x:Name="Pop" PopupAnimation="Slide" IsOpen="{Binding ElementName=btnTheme,Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=btnTheme}" Placement="Top"
                       AllowsTransparency="True" StaysOpen="False" HorizontalAlignment="Left" VerticalAlignment="Bottom">

                                <Border Background="{DynamicResource S.Brush.Accent.Opacity.5}"
                          CornerRadius="5" BorderBrush="{DynamicResource S.Brush.Accent}"
                          BorderThickness="1">
                                    <StackPanel Margin="10">
                                        <local:ThemeSetControl Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe665;"></Setter>
                            <Setter Property="Padding" Value="0"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>

                        --><!--淡出动画-->
                        <!--
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>--><!--
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="S.Window.Link.Phone" TargetType="{x:Type local:PhoneWindowBase}" BasedOn="{StaticResource S.Window.Main.Default}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CaptionHeight" Value="{DynamicResource S.Window.Row.Height}"/>
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Height" Value="700"/>
        <Setter Property="FIcon" Value="&#xe7fd;"/>
        <Setter Property="h:Cattach.VisibleActions">
            <Setter.Value>
                <h:ActionCollection>
                    <h:ScaleAction/>
                </h:ActionCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PhoneWindowBase}">
                    <Grid Name="g_all">
                        --><!--背景--><!--
                        <Border Margin="{TemplateBinding Padding}" CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                Effect="{DynamicResource S.DropShadowEffect.Window}" BorderThickness="{TemplateBinding BorderThickness}"/>

                        <Grid  Margin="{TemplateBinding Padding}" >
                            <Border x:Name="BgInner" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Bottom}" Background="{TemplateBinding Background}" Grid.Row="1">

                                --><!--窗体内容区域--><!--
                                <AdornerDecorator WindowChrome.IsHitTestVisibleInChrome="True">
                                    <Grid>
                                        --><!--托盘图标--><!--
                                        <local:NotifyIcon x:Name="PART_NotifyIcon"
                                      Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}"
                                      Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                      Text="{TemplateBinding Title}"
                                      IconVisibility="Visible">
                                            <FrameworkElement.ContextMenu>
                                                <ContextMenu >
                                                    <MenuItem Header="显示面板" Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                    <MenuItem Header="隐藏"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                    <MenuItem Header="退出"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CloseWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                </ContextMenu>
                                            </FrameworkElement.ContextMenu>
                                        </local:NotifyIcon>

                                        <local:DrawerHost HorizontalContentAlignment="Stretch">
                                            <Grid>
                                                --><!--整体消息弹出--><!--
                                                <local:DialogHost Identifier="windowDialog" HorizontalAlignment="Stretch" Effect="{TemplateBinding AdornerDecoratorEffect}"  VerticalAlignment="Stretch" Margin="-3,0,-3,-3">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition Height="50"/>
                                                        </Grid.RowDefinitions>

                                                        <local:LinkActionFrame Grid.Row="0" UseRandomWipe="False" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}">
                                                            <local:LinkActionFrame.CurrentWipe>
                                                                <local:CircleWipe Duration="200"/>
                                                            </local:LinkActionFrame.CurrentWipe>
                                                        </local:LinkActionFrame>

                                                        <ListBox Grid.Row="1" SelectedIndex="0" BorderThickness="2" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                                                                 Background="{DynamicResource S.Brush.TextBackground.Default}" Margin="2"
                                                                 SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}" ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=TabLinks}">
                                                            <ListBox.Resources>
                                                                <DataTemplate DataType="{x:Type local:TabLink}">
                                                                    <Grid>
                                                                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                            <TextBlock x:Name="tb_logo" Text="{Binding Logo}" Style="{DynamicResource S.TextBlock.FIcon}" Margin="1"/>
                                                                            <TextBlock Text="{Binding DisplayName}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=Foreground}" VerticalAlignment="Center"/>
                                                                        </StackPanel>
                                                                    </Grid>
                                                                    <DataTemplate.Triggers>
                                                                        <DataTrigger Binding="{Binding Logo}" Value="{x:Null}">
                                                                            <Setter Property="Visibility" Value="Collapsed" TargetName="tb_logo"/>
                                                                        </DataTrigger>
                                                                    </DataTemplate.Triggers>
                                                                </DataTemplate>
                                                            </ListBox.Resources>

                                                            <ListBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <UniformGrid Columns="4"/>
                                                                </ItemsPanelTemplate>
                                                            </ListBox.ItemsPanel>

                                                            <ListBox.ItemContainerStyle>
                                                                <Style TargetType="ListBoxItem">
                                                                    <Setter Property="Template">
                                                                        <Setter.Value>
                                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                                <Grid>
                                                                                    <ContentPresenter/>
                                                                                </Grid>
                                                                                <ControlTemplate.Triggers>
                                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent.MouseOver}"/>
                                                                                    </Trigger>

                                                                                    <Trigger Property="IsSelected" Value="true">
                                                                                        <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"/>
                                                                                    </Trigger>
                                                                                </ControlTemplate.Triggers>
                                                                            </ControlTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </ListBox.ItemContainerStyle>

                                                            <ListBox.Template>
                                                                <ControlTemplate TargetType="ListBox">
                                                                    <Grid>
                                                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" 
                                                                                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Bottom}">
                                                                            <ItemsPresenter/>
                                                                        </Border>
                                                                    </Grid>
                                                                </ControlTemplate>
                                                            </ListBox.Template>
                                                        </ListBox>

                                                        --><!--蒙版--><!--
                                                        <local:ContainPanel Background="{DynamicResource S.Brush.Dialog.Cover}" Visibility="Collapsed" x:Name="PART_LAYERGROUP">
                                                            <local:ContainPanel.AnimationAction>
                                                                <h:ScaleAction/>
                                                            </local:ContainPanel.AnimationAction>
                                                        </local:ContainPanel>
                                                    </Grid>
                                                </local:DialogHost>

                                                <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1"/>

                                                <local:Snackbar MessageQueue="{local:MessageQueue}" x:Name="PART_SnackBar" />
                                            </Grid>
                                        </local:DrawerHost>
                                    </Grid>
                                </AdornerDecorator>

                            </Border>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>
