<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Engine.WpfControl"
                    xmlns:h="QQ:178876839"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:service="clr-namespace:Engine.WpfBase">
    
    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="WindowBase.xaml"/>
        <ResourceDictionary Source="MainWindowBase.xaml"/>
    </ResourceDictionary.MergedDictionaries>-->

    <!--默认WindowBase的样式-->
    <!--<Style x:Key="S.Window.Office.Default" TargetType="{x:Type local:OfficeWindowBase}"  BasedOn="{StaticResource S.Window.Main.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:OfficeWindowBase}">
                    <Grid Effect="{TemplateBinding AdornerDecoratorEffect}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding LoadedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        
                        --><!--背景--><!--
                        <Border x:Name="Bg"
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Effect="{StaticResource S.EffectShadow.3}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </Border>

                        <Border  x:Name="BgInner" CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" 
                                 Background="{TemplateBinding Background}"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </Border>

                        <Grid Margin="0">
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="20" Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            --><!--Caption标题部分--><!--
                            <Border  Grid.Row="0" Background="{TemplateBinding CaptionBackground}">
                                <Grid Margin="2,1,2,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Border Grid.ColumnSpan="2" Grid.RowSpan="2"/>

                                    <ContentControl Content="{TemplateBinding TitleContent}"  WindowChrome.IsHitTestVisibleInChrome="True"/>

                                    --><!--Header部分--><!--
                                    <StackPanel x:Name="PART_Header" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock VerticalAlignment="Center"
                                                   FontSize="{StaticResource S.FontSize.Header}" 
                                                   Foreground="{TemplateBinding CaptionForeground}" 
                                                   Text="{TemplateBinding Title}"/>
                                    </StackPanel>

                                    --><!--窗体功能按钮：最小、最大、关闭--><!--
                                    <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Top" Margin="1" HorizontalAlignment="Right" Height="{TemplateBinding CaptionHeight}">

                                        <ToggleButton x:Name="btnTheme" Width="30" VerticalAlignment="Center" Margin="1"
                           Visibility="{Binding Path=SetboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                          Style="{DynamicResource S.ToggleButton.BrushFIconChecked}" h:Cattach.FIcon="&#xe6d2;"
                           WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"/>

                                        <local:FButton x:Name="btnMin"  Width="30" VerticalAlignment="Center" Margin="1"
                           Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                           Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe61d;" FIconSize="14"
                           WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                           Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnMax"  Width="30" VerticalAlignment="Center" Margin="1"
                            Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                            Style="{DynamicResource S.FButton.Style.Transparent}" FIcon="&#xe665;" FIconSize="14"
                            WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"
                           Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnClose"  Width="35" Height="35" VerticalAlignment="Center" Margin="1" CornerRadius="0" Padding="1 2 1 2"
                           MouseOverBackground="Red" MouseOverForeground="White" PressedBackground="#AA0D0D" PressedForeground="White"
                           AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="14"
                           WindowChrome.IsHitTestVisibleInChrome="True" FIconMargin="0" Foreground="{TemplateBinding CaptionForeground}"
                           Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>
                                </Grid>
                            </Border>

                            --><!--窗体内容区域--><!--
                            <AdornerDecorator Grid.Row="2" Margin="3,-1,3,3">
                                <Grid>
                                    --><!--托盘图标--><!--
                                    <local:NotifyIcon x:Name="PART_NotifyIcon"
                                        Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}"
                                        Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                        Text="{TemplateBinding Title}"
                                        IconVisibility="Visible">

                                        <FrameworkElement.ContextMenu>
                                            <ContextMenu >
                                                <MenuItem Header="显示面板" Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                <MenuItem Header="隐藏"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                
                                                <MenuItem Header="退出"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CloseWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </ContextMenu>
                                        </FrameworkElement.ContextMenu>
                                    </local:NotifyIcon>

                                    --><!--整体消息弹出--><!--
                                    <local:DialogHost Identifier="windowDialog" Margin="-3,0,-3,-3">
                                        <Grid>
                                            --><!--主页--><!--
                                            <DockPanel>
                                                <Border Background="{TemplateBinding CaptionBackground}" DockPanel.Dock="Top">
                                                    <Grid>
                                                        <ContentControl Content="{TemplateBinding ToolContent}"/>
                                                        
                                                        <Button Content="文件" Width="60" Height="{DynamicResource S.Window.Row.Height}" Style="{DynamicResource S.Button.Transparent}" 
                                                                h:Cattach.MouseOverBackground="{DynamicResource S.Brush.TextForeground.White.Opacity.1}"
                                                                Foreground="{DynamicResource S.Brush.TextForeground.White}" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                            <h:Interaction.Triggers>
                                                                <h:EventTrigger EventName="Click">
                                                                    <h:ChangePropertyAction PropertyName="IsChecked" Value="True" TargetObject="{Binding ElementName=cb}"/>
                                                                    <h:ChangePropertyAction PropertyName="CaptionBackground" Value="{DynamicResource S.Brush.TextBackground.Default}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                                    <h:ChangePropertyAction PropertyName="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.Default}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                                </h:EventTrigger>
                                                            </h:Interaction.Triggers>
                                                        </Button>
                                                    </Grid>
                                                </Border>

                                                <Grid>
                                                    --><!--最底层内容--><!--
                                                    <ContentPresenter Content="{TemplateBinding Content}"/> 
                                                </Grid>
                                            </DockPanel>
                                            
                                            <CheckBox x:Name="cb" Visibility="Hidden" IsChecked="False"/>
                                            
                                            --><!--文件-->
                                            <!--<DockPanel h:Cattach.IsVisible="{Binding ElementName=cb,Path=IsChecked}">
                                                <h:Cattach.VisibleActions>
                                                    <h:ActionCollection>
                                                        <h:TranslateAction StartPoint="-100,0" EndPoint="-100,0" Duration="200"/>
                                                    </h:ActionCollection>
                                                </h:Cattach.VisibleActions>
                                                <DockPanel Width="130" Margin="0,-50,0,0" VerticalAlignment="Stretch" Background="{DynamicResource Accent}" >
                                                    <Button DockPanel.Dock="Top" Margin="20,30,0,0" Width="Auto" Height="Auto" HorizontalAlignment="Left"  h:Cattach.FIcon="&#xe9d9;" h:Cattach.FIconSize="45">
                                                        <h:Interaction.Triggers>
                                                            <h:EventTrigger EventName="Click">
                                                                <h:ChangePropertyAction PropertyName="IsChecked" Value="False" TargetObject="{Binding ElementName=cb}"/>
                                                                <h:ChangePropertyAction PropertyName="CaptionBackground" Value="{DynamicResource S.Brush.Accent}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                                <h:ChangePropertyAction PropertyName="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" TargetObject="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                                            </h:EventTrigger>
                                                        </h:Interaction.Triggers>
                                                    </Button>
                                                    
                                                    <ListBox  Style="{DynamicResource S.ListBox.Single}"
                                                              ItemContainerStyle="{DynamicResource S.ListBoxItem.AccentBack}"
                                                              ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=LinkActions}"
                                                              SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink,Mode=TwoWay}">
                                                        <ListBox.ItemTemplate>
                                                            <DataTemplate>
                                                                <TextBlock Text="{Binding DisplayName}" Margin="20,0" Foreground="{DynamicResource S.Brush.TextForeground.White}"/>
                                                            </DataTemplate>
                                                        </ListBox.ItemTemplate>
                                                    </ListBox>
                                                </DockPanel>

                                                <DockPanel Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <local:LinkActionFrame Grid.Row="1" Margin="15,10" BorderThickness="0,0,0,0" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink,Mode=TwoWay}"/>
                                                </DockPanel>



                                            </DockPanel>-->


                                            <!--蒙版--><!--
                                            <local:ContainPanel Background="{DynamicResource S.Brush.Dialog.Cover}" Visibility="Collapsed" x:Name="PART_LAYERGROUP">
                                                <local:ContainPanel.AnimationAction>
                                                    <service:ScaleAction/>
                                                </local:ContainPanel.AnimationAction>
                                            </local:ContainPanel>

                                            <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1"/>
                                        </Grid>
                                    </local:DialogHost>

                                    <local:Snackbar MessageQueue="{local:MessageQueue}" x:Name="PART_SnackBar" />
                                </Grid>
                            </AdornerDecorator>
                            
                            <Popup PopupAnimation="Slide" IsOpen="{Binding ElementName=btnTheme,Path=IsChecked}"  PlacementTarget="{Binding ElementName=btnTheme}" Placement="Top" AllowsTransparency="True" StaysOpen="False" HorizontalAlignment="Left" VerticalAlignment="Bottom">
                                <Border Background="{DynamicResource S.Brush.Accent.Opacity.5}" CornerRadius="5" BorderBrush="{DynamicResource S.Brush.Accent}" BorderThickness="1">
                                    <StackPanel Margin="10">
                                        --><!--<local:ThemeSetControl  Foreground="{DynamicResource S.Brush.TextForeground.White}"/>--><!--
                                    </StackPanel>
                                </Border>
                            </Popup>
                        </Grid>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe665;"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>