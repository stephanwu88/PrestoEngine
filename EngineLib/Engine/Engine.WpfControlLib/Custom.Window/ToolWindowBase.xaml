<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Engine.WpfControl"
                    xmlns:h="QQ:178876839" >


    <!--<ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="WindowBase.xaml"/>
        <ResourceDictionary Source="MainWindowBase.xaml"/>
        <ResourceDictionary Source="../Control/FButton.xaml"/> 
    </ResourceDictionary.MergedDictionaries>

    --><!--默认WindowBase的样式--><!--
    <Style x:Key="S.Window.Tool.Default" TargetType="{x:Type local:ToolWindowBase}" BasedOn="{StaticResource S.Window.Main.Default}">
        <Setter Property="Background" Value="{DynamicResource S.Brush.Accent.Opacity.2}"/>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FIcon.Size.Default}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="CaptionHeight" Value="150"/>
        <Setter Property="CaptionForeground" Value="{DynamicResource S.Brush.TextForeground.White}" />
        <Setter Property="CaptionBackground" Value="{DynamicResource S.Brush.Accent}" />
        <Setter Property="Padding" Value="10"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ToolWindowBase}">
                    <Grid Name="g_all">
                        --><!--Margin="2,0,2,2"-->
                        <!--背景--><!--
                        <Border x:Name="Bg"
                  CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  Effect="{DynamicResource S.DropShadowEffect.Window}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />

                        <Border x:Name="BgInner" CornerRadius="{TemplateBinding h:Cattach.CornerRadius}"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  />

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition  Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition  Height="Auto"/>
                            </Grid.RowDefinitions>

                            --><!--Caption标题部分--><!--
                            <Border Margin="0" Grid.Row="0" Background="{TemplateBinding CaptionBackground}" Height="{TemplateBinding CaptionHeight}" CornerRadius="{DynamicResource S.Window.Item.CornerRadius.Top}">
                                <Grid Margin="2,1,2,0">
                                    <Grid.Background>
                                        <ImageBrush ImageSource="/Engine.WpfControl;component/Resources/Cover.png"/>
                                    </Grid.Background>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <StackPanel x:Name="PART_Header"  HorizontalAlignment="Left" Margin="0" Orientation="Horizontal" VerticalAlignment="Center">
                                        <Image Source="{TemplateBinding Icon}" />
                                    </StackPanel>

                                    --><!--窗体功能按钮：最小、最大、关闭--><!--
                                    <StackPanel Grid.Column="2" Height="{DynamicResource S.Window.Row.Height}" Orientation="Horizontal" VerticalAlignment="Center" WindowChrome.IsHitTestVisibleInChrome="True" Margin="10,0"  HorizontalAlignment="Right">
                                        <StackPanel.Resources>
                                            <Style TargetType="{x:Type local:FButton}" BasedOn="{StaticResource S.FButton.Style.Transparent}">
                                                <Setter  Property="Margin" Value="10,0"/>
                                                <Setter  Property="Width" Value="{DynamicResource S.Window.ItemHeight}"/>
                                                <Setter  Property="MouseOverForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                <Setter  Property="PressedForeground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                <Setter  Property="FIconSize" Value="15"/>
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CaptionForeground}"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="0.6"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Resources>

                                        <ToggleButton x:Name="btnTheme"  Width="{DynamicResource S.Window.ItemHeight}"  VerticalAlignment="Center" Margin="5,0"   ToolTip="更换主题颜色"
                         Visibility="{Binding Path=SetboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                        Style="{DynamicResource S.ToggleButton.BrushFIconChecked}" h:Cattach.FIcon="&#xe6d2;"  h:Cattach.FIconSize="25"
                         WindowChrome.IsHitTestVisibleInChrome="True" Foreground="{TemplateBinding CaptionForeground}"/>


                                        <local:FButton x:Name="btnNotify"   FIcon="&#xe659;" ToolTip="隐藏到托盘"  Command="{Binding Path=NotifyWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnMin"  Visibility="{Binding Path=MinboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                        FIcon="&#xe61d;"   Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnMax"
                          Visibility="{Binding Path=MaxboxEnable,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static h:XConverter.BooleanToVisibilityConverter}}"
                         Command="{Binding Path=MaximizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <local:FButton x:Name="btnClose" Width="{DynamicResource S.Window.Item.Height}" Margin="2,0" FIconSize="15" Foreground="{DynamicResource S.Brush.TextForeground.White}"
                         MouseOverBackground="Red" MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}"  PressedForeground="{DynamicResource S.Brush.TextForeground.White}"
                         AllowsAnimation="True"  FIcon="&#xe6f4;" Style="{DynamicResource S.FButton.Style.Transparent}" 
                         Command="{Binding Path=CloseWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </StackPanel>

                                    <StackPanel Grid.Row="1" HorizontalAlignment="Left" Margin="15,1,15,1" Orientation="Horizontal" VerticalAlignment="Center">
                                        <Image Margin="5,20" Source="{TemplateBinding Logo}" />
                                    </StackPanel>

                                    --><!--工具菜单栏--><!--
                                    <ListBox Height="{DynamicResource S.Window.Row.Height}" Grid.Row="2" h:Cattach.CellMargin="0" WindowChrome.IsHitTestVisibleInChrome="True" BorderThickness="0" Background="{DynamicResource S.Brush.Accent.Opacity.5}" ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=ClickActions}">
                                        <ListBox.ItemTemplate>
                                            --><!--<DataTemplate DataType="{x:Type local:ClickAction}">
                                                <local:FButton Style="{DynamicResource S.FButton.Style.Transparent}" 
                                                               Foreground="{DynamicResource S.Brush.TextForeground.White.Opacity.4}" 
                                                               MouseOverForeground="{DynamicResource S.Brush.TextForeground.White}" 
                                                               FIcon="{Binding Logo}" ToolTip="{Binding DisplayName}">
                                                    --><!--<i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <CallMethodAction MethodName="DoAction" TargetObject="{Binding}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>--><!--
                                                </local:FButton>
                                            </DataTemplate>--><!--
                                        </ListBox.ItemTemplate>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" VerticalAlignment="Center"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel> 
                                    </ListBox>
                                </Grid>
                            </Border>
                            --><!--窗体内容区域--><!--
                            <AdornerDecorator Grid.Row="1" Margin="1,0,1,1" WindowChrome.IsHitTestVisibleInChrome="True">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    --><!--托盘图标--><!--
                                    <local:NotifyIcon x:Name="PART_NotifyIcon"
                                      Icon="{Binding Path=NotifyIconSource,RelativeSource={RelativeSource TemplatedParent}}"
                                      Command="{Binding Path=MinimizeWindowCommand,RelativeSource={RelativeSource TemplatedParent}}"
                                      Text="{TemplateBinding Title}"
                                      IconVisibility="Visible">

                                        <FrameworkElement.ContextMenu>
                                            <ContextMenu >
                                                <MenuItem Header="显示面板" Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                <MenuItem Header="隐藏"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=NotifyWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>

                                                <MenuItem Header="退出"  Command="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CloseWindowCommand}"
                                                          CommandTarget="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                            </ContextMenu>
                                        </FrameworkElement.ContextMenu>
                                    </local:NotifyIcon>

                                    <ListBox x:Name="list"  Grid.Column="0" Background="{DynamicResource S.Brush.White.Opactiy.6}"
                        BorderBrush="Transparent" SelectedIndex="0" Style="{DynamicResource S.ListBox.Single}" Foreground="{DynamicResource S.Brush.TextForeground.Title}"
                        SelectedItem="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}" h:Cattach.CellMargin="0"
                        ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=TabLinks}" Margin="2,1,2,1"
                        WindowChrome.IsHitTestVisibleInChrome="True">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type local:LinkAction}">
                                                <Grid Width="{Binding RelativeSource={RelativeSource AncestorType=ListBox},Path=Width}">
                                                    <Border x:Name="border" CornerRadius="5" Margin="2">
                                                        <Grid Margin="2,10">
                                                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                <TextBlock x:Name="icon" Style="{DynamicResource S.TextBlock.FIcon}" Text="{Binding Logo}" HorizontalAlignment="Center" Margin="-10,0" VerticalAlignment="Center"/>
                                                                <TextBlock x:Name="txt" Text="{Binding DisplayName}" FontSize="8" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="-10,0"/>
                                                            </StackPanel>
                                                        </Grid>
                                                    </Border>
                                                </Grid>

                                                <DataTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource S.Brush.Accent.MouseOver.Background}"/>
                                                    </Trigger>

                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem},Path=IsSelected}" Value="true">
                                                        <Setter TargetName="border" Property="Background" Value="{DynamicResource S.Brush.Accent}"/>
                                                        <Setter TargetName="icon" Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                        <Setter TargetName="icon" Property="FontWeight" Value="Black"/>
                                                        <Setter TargetName="txt" Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.White}"/>
                                                        <Setter TargetName="txt" Property="FontWeight" Value="Black"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <local:DrawerHost HorizontalContentAlignment="Stretch" Grid.Column="1">
                                        <Grid>
                                            --><!--整体消息弹出--><!--
                                            <local:DialogHost Identifier="windowDialog" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,1,2,1">
                                                <Grid>
                                                    --><!--<local:LinkActionFrame UseRandomWipe="False" Background="{DynamicResource S.Brush.White.Opactiy.4}" LinkAction="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=CurrentLink}"/>-->

                                                    <!--蒙版--><!--
                                                    <local:ContainPanel Background="{DynamicResource S.Brush.Dialog.Cover}" Visibility="Collapsed" x:Name="PART_LAYERGROUP">
                                                        <local:ContainPanel.AnimationAction>
                                                            <h:ScaleAction/>
                                                        </local:ContainPanel.AnimationAction>
                                                    </local:ContainPanel>
                                                </Grid>
                                            </local:DialogHost>

                                            <local:MessageContainer  x:Name="PART_Message"  Grid.Row="1"/>

                                            <local:Snackbar MessageQueue="{local:MessageQueue}" x:Name="PART_SnackBar" />
                                        </Grid>
                                    </local:DrawerHost>
                                </Grid>
                            </AdornerDecorator>

                            <Popup x:Name="Pop" PopupAnimation="Slide" IsOpen="{Binding ElementName=btnTheme,Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=btnTheme}" Placement="Top"
                       AllowsTransparency="True" StaysOpen="False" HorizontalAlignment="Left" VerticalAlignment="Bottom">

                                <Border Background="{DynamicResource S.Brush.Accent.Opacity.5}"
                          CornerRadius="5" BorderBrush="{DynamicResource S.Brush.Accent}"
                          BorderThickness="1">
                                    <StackPanel Margin="10">
                                        <local:ThemeSetControl Foreground="{TemplateBinding CaptionForeground}"/>
                                    </StackPanel>
                                </Border>
                            </Popup>

                            <Grid Height="{DynamicResource S.Window.Row.Height}" Grid.Row="2">

                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe665;"></Setter>
                            <Setter Property="Margin" TargetName="g_all" Value="0"></Setter>
                        </Trigger>
                        <Trigger Property="WindowState" Value="Normal">
                            <Setter Property="FIcon" TargetName="btnMax" Value="&#xe615;"></Setter>
                        </Trigger>

                        --><!--淡出动画--><!--
                        <EventTrigger RoutedEvent="Window.Loaded">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{DynamicResource Story.WindowLoad}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>--><!--
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


</ResourceDictionary>
