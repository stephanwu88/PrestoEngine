<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:local="clr-namespace:Engine.WpfControl"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:h="QQ:178876839"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--抖动效果-->
    <Storyboard x:Key="S.Storyboard.RenderTransform.Shake">
        <DoubleAnimation From="-10" To="0"  Duration="0:0:0.2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" RepeatBehavior="Forever">
            <DoubleAnimation.EasingFunction>
                <ElasticEase/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <!--字体反弹效果-->
    <Storyboard  x:Key="S.Storyboard.FontSize.Rebound">
        <DoubleAnimation From="5" To="50" Duration="0:0:2" Storyboard.TargetProperty="FontSize"  RepeatBehavior="Forever">
            <DoubleAnimation.EasingFunction>
                <BounceEase/>
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <!--字体反弹效果-->
    <Storyboard x:Key="S.Storyboard.Color.Flash">
        <ColorAnimation  Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" RepeatBehavior="Forever"  From="Green" To="#ED4646" Duration="0:0:2" AutoReverse="True" >
            <ColorAnimation.EasingFunction>
                <CubicEase/>
            </ColorAnimation.EasingFunction>
        </ColorAnimation>
    </Storyboard>

    <!--右向左渐显示动画-->
    <Storyboard x:Key="S.Storyboard.MessageLoad.OpacityRightToLeft">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="1"/>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!--右向左渐显示动画-->
    <Storyboard x:Key="S.Storyboard.MessageHide.OpacityLeftToRight">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:04.7" Value="1"/>
            <SplineDoubleKeyFrame KeyTime="00:00:05" Value="0"/>
        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200"/>
            <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:04.7" Value="0"/>
            <SplineDoubleKeyFrame KeyTime="00:00:05" Value="200"/>
        </DoubleAnimationUsingKeyFrames>

        <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)">
            <DiscreteObjectKeyFrame KeyTime="0:0:5" >
                <DiscreteObjectKeyFrame.Value>
                    <Visibility>Collapsed</Visibility>
                </DiscreteObjectKeyFrame.Value>
            </DiscreteObjectKeyFrame>
        </ObjectAnimationUsingKeyFrames>
    </Storyboard>

    <!--<Style x:Key="S.MessageBase.Default" TargetType="{x:Type local:MessageBase}">
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{DynamicResource S.Storyboard.MessageLoad.OpacityRightToLeft}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="{x:Type local:ErrorMessage}" BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ErrorMessage}">
                    <Grid Height="60" Width="350" Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="2" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        <TextBlock Text="&#xe701;" Style="{DynamicResource S.TextBlock.FIcon}" FontSize="30" Foreground="{DynamicResource S.Brush.Red.Notice}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <StackPanel Grid.Column="1" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">
                            <TextBlock Text="{TemplateBinding Message}"  Margin="0,2"/>
                            <TextBlock Text="{TemplateBinding Time}"/>
                        </StackPanel>

                        <local:FButton Width="38" VerticalAlignment="Center" CornerRadius="0" HorizontalAlignment="Right" Grid.ColumnSpan="2"
                           MouseOverForeground="Red" PressedForeground="LightGray"
                           AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="16"
                           FIconMargin="0" Command="{x:Static local:MessageBase.CloseCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type local:InfoMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InfoMessage}">
                    <Grid Height="60" Width="350"  Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="2" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        <TextBlock Text="&#xe70a;" Style="{DynamicResource S.TextBlock.FIcon}"  FontSize="30"  Foreground="{DynamicResource S.Brush.Accent}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <StackPanel Grid.Column="1" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">
                            <TextBlock Text="{TemplateBinding Message}"  Margin="0,2"/>
                            <TextBlock Text="{TemplateBinding Time}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SuccessMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SuccessMessage}">
                    <Grid Height="60" Width="350"  Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="2" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        <TextBlock Text="&#xe76c;" Style="{DynamicResource S.TextBlock.FIcon}"  FontSize="30"  Foreground="{DynamicResource S.Brush.Green.Notice}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <StackPanel Grid.Column="1" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">
                            <TextBlock Text="{TemplateBinding Message}"  Margin="0,2"/>
                            <TextBlock Text="{TemplateBinding Time}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:WarnMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WarnMessage}">
                    <Grid Height="60" Width="350"  Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="2" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        <TextBlock Text="&#xe62e;" Style="{DynamicResource S.TextBlock.FIcon}"  FontSize="30"  Foreground="{DynamicResource S.Brush.Orange.Notice}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <StackPanel Grid.Column="1" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">
                            <TextBlock Text="{TemplateBinding Message}"  Margin="0,2"/>
                            <TextBlock Text="{TemplateBinding Time}"/>
                        </StackPanel>

                        <local:FButton Width="38" VerticalAlignment="Center" CornerRadius="0" HorizontalAlignment="Right" Grid.ColumnSpan="2"
                           MouseOverForeground="Red" PressedForeground="LightGray"
                           AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="16"
                           FIconMargin="0" Command="{x:Static local:MessageBase.CloseCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FatalMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FatalMessage}">
                    <Grid Height="60" Width="350"  Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="2" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        <TextBlock Text="&#xe718;" Style="{DynamicResource S.TextBlock.FIcon}"  FontSize="30"  Foreground="{DynamicResource S.Brush.Black.Notice}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <StackPanel Grid.Column="1" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">
                            <TextBlock Text="{TemplateBinding Message}"  Margin="0,2"/>
                            <TextBlock Text="{TemplateBinding Time}"/>
                        </StackPanel>

                        <local:FButton Width="38" VerticalAlignment="Center" CornerRadius="0" HorizontalAlignment="Right" Grid.ColumnSpan="2"
                           MouseOverForeground="Red" PressedForeground="LightGray"
                           AllowsAnimation="True" Style="{DynamicResource S.FButton.Style.Transparent}"  FIcon="&#xe6f4;" FIconSize="16"
                           FIconMargin="0" Command="{x:Static local:MessageBase.CloseCommand}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:DailogMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:DailogMessage}">
                    <Grid Height="100" Width="350"  Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Border Grid.ColumnSpan="2" Grid.RowSpan="5" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        <TextBlock Text="&#xe713;" Style="{DynamicResource S.TextBlock.FIcon}"  FontSize="30" Grid.RowSpan="3" Foreground="{DynamicResource S.Brush.Accent}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <TextBlock Grid.Row="0" Grid.Column="1"  Text="{TemplateBinding Message}" VerticalAlignment="Center"  Margin="0,10,0,0" />

                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{TemplateBinding Time}" VerticalAlignment="Center"  Margin="0,0,0,-5"/>

                        <StackPanel  Grid.Column="1" Grid.Row="2" Height="{DynamicResource S.Window.Row.Height}" Margin="0,0,0,5" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch" 
                         TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">

                            <local:FButton Content="忽略" Style="{DynamicResource S.FButton.Style.Link}" Margin="10,0" Command="{x:Static local:MessageBase.CloseCommand}"/>

                            <local:FButton Content="确定" Style="{DynamicResource S.FButton.Style.Link}" Command="{x:Static local:DailogMessage.SumitCommand}"/>
                        </StackPanel>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:StringProgressMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:StringProgressMessage}">
                    <Grid Height="60" Width="350"  Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Border Grid.ColumnSpan="2" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        <TextBlock Text="&#xe70a;" Style="{DynamicResource S.TextBlock.FIcon}"  FontSize="30"  Foreground="{DynamicResource S.Brush.Accent}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                        <StackPanel Grid.Column="1" VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource S.Brush.TextForeground.Default}">
                            <TextBlock Text="{TemplateBinding Message}"/>
                            <TextBlock Text="{TemplateBinding Time}"/>
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PercentProgressMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PercentProgressMessage}">
                    <Grid Height="60" Width="350"  Margin="5">
                        <Border Grid.ColumnSpan="2" Background="{DynamicResource S.Brush.TextBackground.Default}" BorderThickness="1" BorderBrush="{DynamicResource S.Brush.TextBorderBrush.Default}"
                    CornerRadius="{DynamicResource S.Window.Item.CornerRadius}" Effect="{DynamicResource S.EffectShadow.3}"/>

                        --><!--<TextBlock Text="&#xe70a;" Style="{DynamicResource S.TextBlock.FIcon}"  FontSize="30"  Foreground="{DynamicResource S.Brush.Accent}" VerticalAlignment="Center" HorizontalAlignment="Center"/>--><!--

                        <ProgressBar Value="{TemplateBinding Value}" Minimum="0.0" Maximum="100.0" Width="300" Height="15" 
                                         h:Cattach.CornerRadius="{DynamicResource S.Window.Item.CornerRadius}"  
                                         Style="{DynamicResource S.ProgressBar.Handy.Default}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:WaittingMessage}"  BasedOn="{StaticResource S.MessageBase.Default}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:WaittingMessage}">
                    <Grid Height="Auto" Width="Auto"  Margin="10,2">
                        <TextBlock Text="{TemplateBinding Message}" Foreground="{DynamicResource S.Brush.Accent}"  HorizontalAlignment="Right" VerticalAlignment="Top" Margin="20,0" FontSize="25" RenderTransformOrigin="0.5,0.5" RenderTransform="{StaticResource S.TransformGroup.Default}">
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="Button.Loaded">
                                    <BeginStoryboard Storyboard="{StaticResource S.Storyboard.RenderTransform.Shake}"/>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:MessageContainer}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        --><!--<Setter Property="BorderBrush" Value="{x:Null}"/>--><!--
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        --><!--<Setter Property="FocusVisualStyle" Value="{x:Null}"/>--><!--
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        --><!--<Setter Property="ItemsSource" Value="{Binding Source,RelativeSource={RelativeSource Mode=Self}}" />--><!--
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel HorizontalAlignment="Right"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MessageContainer}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ItemsPresenter/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


</ResourceDictionary>
