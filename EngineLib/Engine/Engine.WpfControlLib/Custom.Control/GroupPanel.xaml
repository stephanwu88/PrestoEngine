<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Engine.WpfControl">

    <Style x:Key="S.GroupPanel.Win11" TargetType="{x:Type local:GroupPanel}">
        <Setter Property="Foreground" Value="#FF217cb5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GroupPanel}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True"
                        CornerRadius="30" 
                        Width="{TemplateBinding Width}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{TemplateBinding HeaderHeight}"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="HeaderSite"
                                          Style="{DynamicResource S.GroupPanel.Toggle}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ExpandSite" Grid.Row="1"  
                                          Focusable="False" Visibility="Collapsed" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.GroupPanel.Toggle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFFAFAFA" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=ActualWidth}"></Setter>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border Background="Green" Width="40" Height="40" CornerRadius="4" HorizontalAlignment="Left" Margin="5 0 0 0">
                            <TextBlock Text="{Binding HeaderIcon,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}" FontSize="23" Foreground="White" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <TextBlock Text="{Binding Header,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="55 7 0 0"/>
                        <TextBlock Text="{Binding HeaderComment,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}" FontSize="14" Foreground="#808080" Margin="55 30 0 0"/>
                        <TextBlock x:Name="canvNormal" Foreground="#808080" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0">
                            <Path Data="M 0 0 L 6 6  12 0" Stroke="Gray" StrokeThickness="2"/>
                        </TextBlock>
                        <TextBlock x:Name="canvChecked" Visibility="Hidden" Foreground="#808080" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0">
                            <Path Data="M 0 0 L 6 -6  12 0" Stroke="Gray" StrokeThickness="2"/>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                            <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.GroupPanel.Win2" TargetType="{x:Type local:GroupPanel}">
        <Setter Property="Foreground" Value="#FF217cb5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GroupPanel}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True"
                        CornerRadius="30" 
                        Width="{TemplateBinding Width}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{TemplateBinding HeaderHeight}"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="HeaderSite"
                                          Style="{DynamicResource S.GroupPanel.Toggle2}"
                                          Cursor="Hand"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ExpandSite" Grid.Row="1"  
                                          Focusable="False" Visibility="Collapsed" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>-->
                        <Trigger Property="Expandable" Value="False">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Contractable" Value="False">
                            <Setter Property="IsEnabled" TargetName="HeaderSite" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.GroupPanel.Toggle2" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#FFFAFAFA" />
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=ActualWidth}"></Setter>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border Width="40" Height="40" CornerRadius="20" HorizontalAlignment="Left" Margin="5 0 0 0">
                            <TextBlock Text="{Binding HeaderIcon,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}"
                                       FontFamily="{DynamicResource IconFont}"
                                       FontSize="30" Foreground="SkyBlue" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <TextBlock Text="{Binding Header,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="55 7 0 0"/>
                        <TextBlock Text="{Binding HeaderComment,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}" FontSize="14" Foreground="#808080" Margin="55 30 0 0"/>
                        <TextBlock x:Name="canvNormal" Foreground="#808080" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0">
                            <Path Data="M 0 0 L 6 6  12 0" Stroke="Gray" StrokeThickness="2"/>
                        </TextBlock>
                        <TextBlock x:Name="canvChecked" Visibility="Hidden" Foreground="#808080" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 10 0">
                            <Path Data="M 0 0 L 6 -6  12 0" Stroke="Gray" StrokeThickness="2"/>
                        </TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                            <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.GroupPanel.ToggleHeader" TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="{Binding RelativeSource=
            {RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}, Path=ActualWidth}"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Height="50" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" >
                            <Border Background="Green" Width="45" Height="45" CornerRadius="25" 
                                    RenderOptions.BitmapScalingMode="HighQuality"
                                    HorizontalAlignment="Left" Margin="15 0 0 0">
                                <TextBlock Text="{Binding HeaderIcon,FallbackValue=+}" FontSize="30" 
                                           Foreground="White" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" 
                                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Border>
                            <StackPanel Orientation="Vertical" Margin="10,0,0,0" 
                                        VerticalAlignment="Center">
                                <TextBlock Text="{Binding Header,FallbackValue=Header,
                                           RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}" 
                                           TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" FontSize="14" 
                                           UseLayoutRounding="True" RenderOptions.EdgeMode="Aliased"/>
                                <TextBlock Text="{Binding HeaderComment,FallbackValue=HeaderComment,
                                           RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:GroupPanel}}"
                                           TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"
                                           UseLayoutRounding="True" RenderOptions.EdgeMode="Aliased"
                                           FontSize="13" Margin="0,5,0,0" Foreground="#808080"/>
                            </StackPanel>
                        </StackPanel>

                        <Grid Grid.Column="1">
                            <TextBlock x:Name="canvNormal" Foreground="#808080" 
                                       HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 5 0">
                                <!--UseLayoutRounding 像素对齐可以确保线条的边缘与像素网格对齐，从而提高清晰度-->
                                <!--RenderOptions.EdgeMode 关闭抗锯齿效果可能会导致线条看起来更清晰-->
                                <Path Data="M 0 0 L 6 6 12 0" UseLayoutRounding="True" RenderOptions.EdgeMode="Aliased" 
                                      Stroke="Gray" StrokeThickness="2"/>
                            </TextBlock>
                            <TextBlock x:Name="canvChecked" Visibility="Hidden" Foreground="#808080" 
                                       HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 5 0">
                                <Path Data="M 0 0 L 6 -6 12 0" Stroke="Gray" StrokeThickness="2"/>
                            </TextBlock>
                        </Grid>
                        <StackPanel Orientation="Vertical" Margin="15,0,20,0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1">
                            <TextBlock Text="{Binding SAMPLING_DATE,FallbackValue=2023/4/7}"
                                       Foreground="#808080" TextWrapping="NoWrap"  TextTrimming="CharacterEllipsis" FontSize="12"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10 3 5 5"/>
                            <TextBlock Text="{Binding FLAG,FallbackValue='粒度：1 成分：1'}" Foreground="#808080" 
                                       TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" FontSize="12"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10 0 5 0"/>
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                            <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.GroupPanel.SamIn" TargetType="{x:Type local:GroupPanel}">
        <Setter Property="Foreground" Value="#FF217cb5"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HeaderBackground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FFF7F7F7" Offset="0"/>
                    <GradientStop Color="White" Offset="1"/>
                    <GradientStop Color="White" Offset="0.879"/>
                    <GradientStop Color="White" Offset="0.1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:GroupPanel}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True"
                        UseLayoutRounding="True" RenderOptions.EdgeMode="Aliased"
                        CornerRadius="15" 
                        Width="{TemplateBinding Width}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{TemplateBinding HeaderHeight}"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="HeaderSite"
                                          Style="{DynamicResource S.GroupPanel.ToggleHeader}"
                                          Cursor="Hand"
                                          Background="{Binding HeaderBackground, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" 
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ContentPresenter x:Name="ExpandSite" Grid.Row="1"  
                                          Focusable="False" Visibility="Collapsed" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Expandable" Value="False">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Contractable" Value="False">
                            <Setter Property="IsEnabled" TargetName="HeaderSite" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
