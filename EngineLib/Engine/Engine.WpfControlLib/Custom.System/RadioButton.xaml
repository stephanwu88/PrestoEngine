<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:h="clr-namespace:Engine.WpfBase">

    <h:StringToVisible x:Key="StringToVisible"/>

    <!--面板式按钮 左右结构、圆角  左侧Content 右侧Detail-->
    <Style x:Key="S.RadioButton.Panel" TargetType="RadioButton">
        <!--备选颜色#4C81F7 #4EC9EE #FCB633 #FF93A4 #7D7EF8-->
        <Setter Property="Background" Value="#4C81F7"/>
        <Setter Property="BorderBrush" Value="Red"/>
        <Setter Property="Width" Value="70"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="h:Cattach.CornerRadius" Value="7"/>
        <Setter Property="h:Cattach.MarkerCornerRadius" Value="0 7 7 0"/>
        <!--<Setter Property="h:Cattach.Detail" Value=""/>-->
        <Setter Property="h:Cattach.LeftGridLength" Value="*"/>
        <Setter Property="h:Cattach.RightGridLength" Value="Auto"/>
        <Setter Property="h:Cattach.SelectForeground" Value="Yellow"/>
        <Setter Property="h:Cattach.SelectFontSize" Value="16"/>
        <Setter Property="h:Cattach.ContentMargin" Value="8 0"/>
        <Setter Property="h:Cattach.Orientation" Value="Horizontal"/>
        <!--图标部分(可不指定)-->
        <!--<Setter Property="h:Cattach.FIcon" Value=""/>-->
        <Setter Property="h:Cattach.FIconSize" Value="30"/>
        <Setter Property="h:Cattach.FIconMargin" Value="0 0 0 0"/>
        <!--标记(可不指定)-->
        <Setter Property="h:Cattach.MarkerPadding" Value="0"/>
        <Setter Property="h:Cattach.MarkerFontSize" Value="15"/>
        <Setter Property="h:Cattach.MarkerMaxWidth" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border" HorizontalAlignment="Left" VerticalAlignment="Center" 
                                CornerRadius="{TemplateBinding h:Cattach.CornerRadius}" 
                                Height="{TemplateBinding Height}" 
                                Background="{TemplateBinding Background}"
                                Width="{TemplateBinding Width}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0"
                                ClipToBounds="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{TemplateBinding h:Cattach.LeftGridLength}"/>
                                <ColumnDefinition Width="{TemplateBinding h:Cattach.RightGridLength}" 
                                                  MaxWidth="{TemplateBinding h:Cattach.MarkerMaxWidth}"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Orientation="{TemplateBinding h:Cattach.Orientation}">
                                <TextBlock x:Name="icon" Text="{TemplateBinding h:Cattach.FIcon}" 
                                            Style="{DynamicResource S.TextBlock.IfNullCollapsed}"
                                            Foreground="{TemplateBinding Foreground}"
                                            FontFamily="{DynamicResource IconFont}"
                                            FontSize="{TemplateBinding h:Cattach.FIconSize}"
                                            Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                            VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock x:Name="_txt" Grid.Column="0" Text="{TemplateBinding Content}" 
                                            Style="{DynamicResource S.TextBlock.IfNullCollapsed}"
                                            TextTrimming="CharacterEllipsis" FontWeight="Bold" 
                                            Margin="{TemplateBinding h:Cattach.ContentMargin}"
                                            Padding="{TemplateBinding h:Cattach.ContentPadding}"
                                            VerticalAlignment="Center" HorizontalAlignment="Center"
                                            FontSize="{TemplateBinding FontSize}" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            Background="Transparent"/>
                            </StackPanel>
                            <!--左侧偏置点标记-->
                            <Border x:Name="_dot" Grid.Column="0" CornerRadius="10" Width="20" Height="20" HorizontalAlignment="Left" 
                                    Margin="-10" Background="White" Opacity="0.5"/>

                            <Grid x:Name="marker" Grid.Column="1">
                                <Border CornerRadius="{TemplateBinding h:Cattach.MarkerCornerRadius}" Background="White" Opacity="0.5"/>
                                <TextBlock Grid.Column="1" Text="{TemplateBinding h:Cattach.Detail}" 
                                               TextTrimming="CharacterEllipsis"
                                               Padding="{TemplateBinding h:Cattach.MarkerPadding}" 
                                               VerticalAlignment="Center" HorizontalAlignment="Center"
                                               FontSize="{TemplateBinding h:Cattach.MarkerFontSize}" 
                                               Foreground="White" Background="Transparent"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_dot" Property="Background" Value="{Binding Path=(h:Cattach.SelectForeground),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="_dot" Property="Opacity" Value="1"/>
                            <Setter TargetName="_txt" Property="Foreground" Value="{Binding Path=(h:Cattach.SelectForeground),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <!--<Setter TargetName="_txt" Property="FontSize" Value="{Binding Path=(h:Cattach.SelectFontSize),RelativeSource={RelativeSource TemplatedParent}}"/>-->
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.03" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.03" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.FontSize)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="16" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <!--<DoubleAnimation To="1.02" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)" />
                                        <DoubleAnimation To="1.02" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.FontSize)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="15" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <!--<DoubleAnimation To="1" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)" />
                                        <DoubleAnimation To="1" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--圆形图标按钮 圆形 【右上角数字项】 -->
    <Style x:Key="S.RadioButton.Circle" TargetType="RadioButton">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush>
                    <GradientStop Color="#14DFEA" Offset="0"/>
                    <GradientStop Color="#5190FA" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="h:Cattach.Detail" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="White" FontSize="{TemplateBinding FontSize}" 
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <!--右上角数字显示-->
                        <Border Background="Red" HorizontalAlignment="Right" Margin="0 -5 0 0"
                                Visibility="{TemplateBinding h:Cattach.Detail,Converter={StaticResource StringToVisible}}"
                                CornerRadius="10"  Opacity="0.9" 
                                MaxWidth="40" MinWidth="20"
                                VerticalAlignment="Top" Height="20">
                            <TextBlock Padding="5 0 5 0" Text="{TemplateBinding h:Cattach.Detail}" 
                                       TextTrimming="CharacterEllipsis" Foreground="White" FontSize="10" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#4C81F7"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1.2" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)" />
                                        <DoubleAnimation To="1.2" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)" />
                                        <DoubleAnimation To="1" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#4C81F7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--文字按钮-->
    <Style x:Key="S.RadioButton.Text" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="#4C81F7"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="h:Cattach.MarkerThickness" Value="0 0 0 1"/>
        <Setter Property="h:Cattach.MarkerMargin" Value="0 0"/>
        <Setter Property="h:Cattach.MarkerBorderBrush" Value="Red"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <TextBlock x:Name="txt" Text="{TemplateBinding Content}" 
                                Foreground="{TemplateBinding Foreground}"
                                FontSize="{TemplateBinding FontSize}"
                                VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <Border x:Name="marker" Margin="{TemplateBinding h:Cattach.MarkerMargin}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding h:Cattach.MarkerThickness}">
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="txt" Property="Opacity" Value="0.8"/>
                            <Setter TargetName="marker" Property="BorderThickness" Value="{Binding Path=(h:Cattach.MarkerThickness),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="marker" Property="BorderBrush" Value="{Binding Path=(h:Cattach.MarkerBorderBrush),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--图标+文字按钮 默认上下布局-->
    <Style x:Key="S.RadioButton.FIconText" TargetType="RadioButton">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <DrawingBrush>
                    <DrawingBrush.Drawing>
                        <GeometryDrawing>
                            <GeometryDrawing.Pen>
                                <Pen Brush="#4C81F7" Thickness="2">
                                    <Pen.DashStyle>
                                        <DashStyle Dashes="3 3"/>
                                    </Pen.DashStyle>
                                </Pen>
                            </GeometryDrawing.Pen>
                            <GeometryDrawing.Geometry>
                                <RectangleGeometry Rect="0, 0, 200, 100"/>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingBrush.Drawing>
                </DrawingBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1" />
            </Setter.Value>
        </Setter>
        <!--<Setter Property="h:Cattach.FIcon" Value=""/>-->
        <Setter Property="h:Cattach.FIconSize" Value="30"/>
        <Setter Property="h:Cattach.FIconColor" Value="#7C9BD8"/>
        <Setter Property="h:Cattach.FIconMargin" Value="0 0 0 0"/>
        <Setter Property="h:Cattach.CornerRadius" Value="5"/>
        <Setter Property="h:Cattach.Orientation" Value="Vertical"/>
        <Setter Property="h:Cattach.ContentMargin" Value="0 5 0 0"/>
        <Setter Property="h:Cattach.ContentPadding" Value="0 0 0 0"/>
        <Setter Property="h:Cattach.MarkerMargin" Value="20 0 "/>
        <Setter Property="h:Cattach.MarkerWidth" Value="10"/>
        <Setter Property="h:Cattach.MarkerHeight" Value="10"/>
        <Setter Property="h:Cattach.MarkerCornerRadius" Value="5"/>
        <Setter Property="h:Cattach.MarkerBackground" Value="Red"/>
        <Setter Property="h:Cattach.MarkerThickness" Value="0 0 0 1"/>
        <Setter Property="h:Cattach.MarkerBorderBrush" Value="Blue"/>
        <Setter Property="h:Cattach.ShowMarker" Value="False"/>
        <!--<Setter Property="h:Cattach.Detail" Value=""/>-->
        <Setter Property="h:Cattach.MouseOverOpacity" Value="0.7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid ClipToBounds="True" Background="Transparent">
                        <StackPanel x:Name="panel" HorizontalAlignment="Center" VerticalAlignment="Center"
                                        Orientation="{TemplateBinding h:Cattach.Orientation}">
                            <TextBlock x:Name="icon" Text="{TemplateBinding h:Cattach.FIcon}" 
                                           Style="{DynamicResource S.TextBlock.IfNullCollapsed}"
                                           Foreground="{TemplateBinding h:Cattach.FIconColor}"
                                           FontFamily="{DynamicResource IconFont}"
                                           FontSize="{TemplateBinding h:Cattach.FIconSize}"
                                           Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBlock x:Name="txt" Text="{TemplateBinding Content}" 
                                           FontFamily="{TemplateBinding FontFamily}" 
                                           Style="{DynamicResource S.TextBlock.IfNullCollapsed}"
                                           Margin="{TemplateBinding h:Cattach.ContentMargin}"
                                           Padding="{TemplateBinding h:Cattach.ContentPadding}"
                                           Foreground="{TemplateBinding Foreground}"
                                           FontSize="{TemplateBinding FontSize}"
                                           VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </StackPanel> 
                        <!--BorderBrush="{TemplateBinding BorderBrush}"-->
                        <!--BorderThickness="{TemplateBinding h:Cattach.MarkerThickness}"-->
                        <Border x:Name="marker2" Margin="{TemplateBinding h:Cattach.MarkerMargin}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding h:Cattach.MarkerThickness}">
                        </Border>
                        <Border x:Name="marker3" CornerRadius="3" Width="10" Height="28"
                                Visibility="{TemplateBinding h:Cattach.Detail,Converter={StaticResource StringToVisible},ConverterParameter='Len[>0]'}"
                                Background="Blue" 
                                HorizontalAlignment="Left" Margin="-5 0 0 0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding h:Cattach.MarkerThickness}">
                        </Border>
                        <Border x:Name="marker"
                                Visibility="{TemplateBinding h:Cattach.Detail,Converter={StaticResource StringToVisible},ConverterParameter='Len[>0]'}"
                                HorizontalAlignment="Right" VerticalAlignment="Top" 
                                Margin="{TemplateBinding h:Cattach.MarkerMargin}"
                                Background="{TemplateBinding h:Cattach.MarkerBackground}"
                                CornerRadius="{TemplateBinding h:Cattach.MarkerCornerRadius}"
                                MinWidth="{TemplateBinding h:Cattach.MarkerWidth}"
                                MaxWidth="{TemplateBinding Width}"
                                Height="{TemplateBinding h:Cattach.MarkerHeight}"
                                MaxHeight="{TemplateBinding Height}">
                            <TextBlock Text="{TemplateBinding h:Cattach.Detail}" Foreground="White"
                                       FontSize="12" TextTrimming="CharacterEllipsis"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="h:Cattach.ShowMarker" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="marker" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="h:Cattach.ShowMarker" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="marker3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.03" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.03" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.FontSize)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="16" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <!--<DoubleAnimation To="1.02" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)" />
                                        <DoubleAnimation To="1.02" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(RadioButton.FontSize)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="15" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <!--<DoubleAnimation To="1" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleX)" />
                                        <DoubleAnimation To="1" Duration="0:0:0.2"
                                                     Storyboard.TargetProperty="(RadioButton.RenderTransform).(ScaleTransform.ScaleY)" />-->
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="marker3" Property="Visibility" Value="Visible"/>
                            <!--<Setter TargetName="marker2" Property="BorderThickness" Value="{Binding Path=(h:Cattach.MarkerThickness),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="marker2" Property="BorderBrush" Value="{Binding Path=(h:Cattach.MarkerBorderBrush),RelativeSource={RelativeSource TemplatedParent}}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.FIconTextHorizontal" TargetType="RadioButton" BasedOn="{StaticResource S.RadioButton.FIconText}">
        <Setter Property="h:Cattach.Orientation" Value="Horizontal"/>
        <Setter Property="h:Cattach.ContentMargin" Value="10 0 0 0"/>
        <Setter Property="h:Cattach.FIconSize" Value="21"/>
    </Style>

    <Style x:Key="S.RadioButton.ChangedImage" TargetType="RadioButton">
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#555"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <DockPanel Background="{TemplateBinding Background}" ToolTip="{TemplateBinding Content}" LastChildFill="False" Width="{TemplateBinding Width}">
                        <Image Margin="2 0 0 0" DockPanel.Dock="Left" x:Name="_img"  Stretch="None" Source="/Engine;component/Image/back.ico"/>
                        <TextBlock DockPanel.Dock="Left" Margin="3 0 0 0" VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="_img" Property="Source" Value="/Engine;component/Assets/Image/Shack.ico"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.ChangedColorBar" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="32"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="bd" Grid.Column="0" CornerRadius="4" Width="32" Height="22" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></Border>
                        <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"></ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="Green"></Setter>
                            <Setter TargetName="bd" Property="BorderBrush" Value="Green"></Setter>
                            <Setter Property="Foreground" Value="#FFDDDDDD"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.Square" TargetType="RadioButton">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Background" Value="#e892ca"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="{TemplateBinding Background}" Margin="0">
                        <Border x:Name="_borderOver" Background="Transparent" 
                                BorderBrush="Transparent" BorderThickness="1" Margin="1"/>
                        <Border x:Name="_borderChecked" Visibility="Collapsed" 
                                Background="Yellow" 
                                HorizontalAlignment="Right" VerticalAlignment="Bottom" 
                                Width="20" Height="20">
                            <Path Data="M0,5 5,10 13,1" Margin="5 5 0 0" Stroke="Red" StrokeThickness="1"/>
                        </Border>
                        <TextBlock FontSize="{TemplateBinding FontSize}" 
                                   Block.TextAlignment="Center" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="_borderOver" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="_borderChecked" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.ColorFullSquare" TargetType="RadioButton">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="#e892ca"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="Transparent" Margin="0">
                        <Border x:Name="_borderOver" Background="White" 
                                BorderBrush="Transparent" BorderThickness="1" Margin="1"/>
                     
                        <TextBlock x:Name="_txt" FontSize="{TemplateBinding FontSize}" 
                                   Block.TextAlignment="Center" 
                                   VerticalAlignment="Center" HorizontalAlignment="Center" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="_borderOver" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="_borderOver" Value="Green"/>
                            <Setter Property="Foreground" TargetName="_txt"  Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.Default" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="FontFamily" Value="{StaticResource  S.FontFamily.Default}" />
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="h:Cattach.FIconMargin" Value="1,1,10,1"></Setter>
        <Setter Property="h:Cattach.FIconSize" Value="{DynamicResource S.FIcon.Size.Default}"/>
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"/>
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" Margin="{TemplateBinding Padding}" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock x:Name="icon" Text="&#xe630;" Style="{DynamicResource S.TextBlock.FIcon}" SnapsToDevicePixels="True"
                                       FontSize="{TemplateBinding h:Cattach.FIconSize}" 
                                        Margin="{TemplateBinding h:Cattach.FIconMargin}"
                                        Foreground="{TemplateBinding Foreground}"/>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Text" Value="&#xe631;" TargetName="icon" ></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.90" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.90" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="S.RadioButton.Box" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource S.Brush.TextForeground.Default}"/>
        <Setter Property="Padding" Value="3 2 3 2"></Setter>
        <Setter Property="FontFamily" Value="{DynamicResource S.FontFamily.Default}" />
        <Setter Property="FontSize" Value="{DynamicResource S.FontSize.Default}"></Setter>
        <Setter Property="BorderThickness" Value="0.5"></Setter>
        <Setter Property="Height" Value="{DynamicResource S.Window.Item.Height}" />
        <Setter Property="SnapsToDevicePixels" Value="true"></Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.TextForeground.Default}" />
        <Setter Property="RenderTransform" Value="{StaticResource S.TransformGroup.Default}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="grid" VerticalAlignment="Center">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"  Height="{TemplateBinding Height}" HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Background}" Width="{TemplateBinding Width}">
                            <ContentPresenter x:Name="con" RenderTransform="{StaticResource S.TransformGroup.Default}"
                                               RenderTransformOrigin="0.5,0.5" 
                                              VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <!--选中的状态标识-->
                        <TextBlock Text="&#xe627;" x:Name="checkState" Style="{DynamicResource S.TextBlock.FIcon}" VerticalAlignment="Bottom" Visibility="Collapsed"
                                   FontSize="25" Margin="0,0,-3,-7" HorizontalAlignment="Right" 
                                   Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <!--触发器：设置选中状态符号-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="checkState" ></Setter>
                            <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="checkState"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="BorderThickness" Value="1.3"></Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource S.Brush.Accent}"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}" TargetName="checkState"></Setter>
                            <Setter Property="Foreground" Value="{DynamicResource S.Brush.Accent}"></Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"  Storyboard.TargetName="con">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.95" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"  Storyboard.TargetName="con">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0.95" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"  Storyboard.TargetName="con">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"  Storyboard.TargetName="con">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="{DynamicResource S.Opacity.Disable}" TargetName="grid" ></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>