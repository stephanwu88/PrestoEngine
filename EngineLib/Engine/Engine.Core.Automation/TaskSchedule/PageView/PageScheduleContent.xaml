<UserControl x:Class="Engine.Core.TaskSchedule.PageScheduleContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Engine.Core.TaskSchedule"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="1550" Loaded="UserControl_Loaded">
    <UserControl.Resources>
        <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="Height" Value="35" />
            <Setter Property="Background" Value="SlateGray" />
            <Setter Property="Foreground" Value="Gainsboro"/>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="宋体" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=ActualWidth}"></Setter>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Canvas Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Canvas x:Name="canvNormal" Visibility="Visible" 
                     Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                     Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Canvas.Right="0">
                                <Path Data="M 0 0 L 6 6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="10"/>
                                <Path Data="M 0 0 L 6 6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="15"/>
                            </Canvas>
                            <Canvas x:Name="canvChecked" Visibility="Hidden" 
                     Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                     Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Canvas.Right="0">
                                <Path Data="M 0 0 L 6 -6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="15"/>
                                <Path Data="M 0 0 L 6 -6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="20"/>
                            </Canvas>

                            <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     Margin="{TemplateBinding Padding}" 
                     RecognizesAccessKey="True"                       
                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Canvas>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="SlateGray" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                                <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="#FF217cb5"/>
            <Setter Property="FontFamily" Value="宋体" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="True"
                            Width="{TemplateBinding Width}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>


                                <ToggleButton x:Name="HeaderSite"  Grid.Row="0"
                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                          Content="{TemplateBinding Header}"                                   
                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                                  
                          Style="{DynamicResource ExpanderToggleButtonStyle}" />
                                <ContentPresenter x:Name="ExpandSite" Grid.Row="1"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="2"></ColumnDefinition>
            <ColumnDefinition Width="300"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Border Grid.Column="0"  BorderThickness="1" BorderBrush="Gray">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="2"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border Grid.Row="0" Grid.Column="0" BorderThickness="1" Margin="1,1,1,1" BorderBrush="Gray">
                    <DataGrid x:Name="_dgScheduleContent" IsReadOnly="True" FontSize="15" AutoGenerateColumns="False" CanUserAddRows="False" Margin="1,1,1,1" HorizontalGridLinesBrush="#FFF0F0F0" VerticalGridLinesBrush="#FFF0F0F0" Background="White" SelectionChanged="_dgScheduleContent_SelectionChanged" LoadingRow="_dgScheduleContent_LoadingRow">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Yellow"/>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Width="50" Header="索引号" Visibility="Hidden" Binding="{Binding id}"/>
                            <DataGridTextColumn Width="80" Header="启用" Binding="{Binding enable}"/>
                            <DataGridTextColumn Width="300" Header="名称" Binding="{Binding name}"/>
                            <DataGridTextColumn Width="80" Header="状态"  Binding="{Binding state}"/>
                            <DataGridTextColumn Width="150" Header="触发器" Binding="{Binding trig}"/>
                            <DataGridTextColumn Width="160" Header="激活时间" Binding="{Binding active_time}"/>
                            <DataGridTextColumn Width="160" Header="运行时间" Binding="{Binding exe_time}"/>
                            <DataGridTextColumn Width="250" Header="上次运行结果" Binding="{Binding exe_result}"/>
                            <DataGridTextColumn Width="130" Header="创建者" Binding="{Binding creator}"/>
                            <DataGridTextColumn Width="160" Header="创建时间" Binding="{Binding create_time}"/>
                            <DataGridTextColumn Width="160" Header="超时设定值" Visibility="Hidden" Binding="{Binding timeout_min}"/>
                            <DataGridTextColumn Width="160" Header="信息流" Binding="{Binding msg_stream}"/>
                            <DataGridTextColumn Width="160" Header="显示样号" Binding="{Binding msg_visual}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
                <GridSplitter Grid.Row="1"  Height="2" HorizontalAlignment="Stretch" />
                <Border  Grid.Row="2" Grid.Column="0"  BorderThickness="1" Margin="1,1,1,1" BorderBrush="Gray">
                    <TabControl x:Name="_TabScheduleContentList" Margin="1,1,1,1">
                        <TabItem Header="TabItem">
                            <Grid Background="White"/>
                        </TabItem>
                        <TabItem Header="TabItem">
                            <Grid Background="White"/>
                        </TabItem>
                    </TabControl>
                </Border>
            </Grid>
        </Border>
        <GridSplitter Grid.Column="1"  Width="1" HorizontalAlignment="Stretch" />
        <Border Grid.Column="2" BorderThickness="1" BorderBrush="Gray">
            <StackPanel Margin="0,0,0,0">
                <Expander Header="任务计划程序库" IsExpanded="True" Style="{DynamicResource ExpanderStyle}" ExpandDirection="Right" Margin="0,0,0,0" FontWeight="Bold" FontSize="20"  HorizontalAlignment="Left"  VerticalAlignment="Top" Width="294">
                    <StackPanel>
                        <Button x:Name="_CmdCreateBaseSchedule" Content="添加计划..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                        <Button x:Name="_CmdEditSchedule" Content="编辑计划..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                        <Button x:Name="_CmdDelSchedule" Content="删除计划..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                        <Button x:Name="_CmdImportSchedule" Content="导入计划..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                        <Button x:Name="_CmdUpdate" Content="刷新..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                    </StackPanel>
                </Expander>
                <Expander Header="所选项" IsExpanded="True" Style="{DynamicResource ExpanderStyle}" FontWeight="Bold" FontSize="20" Margin="0,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="294">
                    <StackPanel>
                        <Button x:Name="_CmdActiveSchedule" Content="激活..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                        <Button x:Name="_CmdKillSchedule" Content="取消..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                        <Button x:Name="_CmdEnableSchedule" Content="启用..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                        <Button x:Name="_CmdDisableSchedule" Content="禁用..." Padding="50,0,0,0" Height="45" HorizontalContentAlignment="Left" BorderThickness="0" Background="White" Click="Cmd_Click"/>
                    </StackPanel>
                </Expander>
            </StackPanel>
        </Border>
    </Grid>
</UserControl>
