<Window x:Class="Engine.Core.TaskSchedule.winTaskSchedule"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Engine.Core.TaskSchedule"
        mc:Ignorable="d" Height="700" Width="1000"
        Title="全自动实验室检测系统" WindowStartupLocation="Manual"  WindowState="Maximized" 
        Loaded="Window_Loaded">
    <Window.Resources>
        <Style x:Key="ExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

            <Setter Property="Height" Value="35" />
            <Setter Property="Background" Value="SlateGray" />
            <Setter Property="Foreground" Value="Gainsboro"/>
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontFamily" Value="宋体" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Expander}, Path=ActualWidth}"></Setter>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Canvas Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <Canvas x:Name="canvNormal" Visibility="Visible" 
                     Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                     Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Canvas.Right="0">
                                <Path Data="M 0 0 L 6 6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="10"/>
                                <Path Data="M 0 0 L 6 6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="15"/>
                            </Canvas>
                            <Canvas x:Name="canvChecked" Visibility="Hidden" 
                     Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                     Background="{TemplateBinding Background}" SnapsToDevicePixels="True" Canvas.Right="0">
                                <Path Data="M 0 0 L 6 -6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="15"/>
                                <Path Data="M 0 0 L 6 -6  12 0 " Stroke="LightSteelBlue" StrokeThickness="2" Canvas.Right="5" Canvas.Top="20"/>
                            </Canvas>

                            <ContentPresenter 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                     Margin="{TemplateBinding Padding}" 
                     RecognizesAccessKey="True"                       
                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Canvas>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="SlateGray" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Visibility" TargetName="canvChecked" Value="Visible" />
                                <Setter Property="Visibility" TargetName="canvNormal" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ExpanderStyle" TargetType="{x:Type Expander}">
            <Setter Property="Foreground" Value="#FF217cb5"/>
            <Setter Property="FontFamily" Value="宋体" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Expander}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" SnapsToDevicePixels="True"
                            Width="{TemplateBinding Width}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>


                                <ToggleButton x:Name="HeaderSite"  Grid.Row="0"
                          ContentTemplate="{TemplateBinding HeaderTemplate}" 
                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                          Content="{TemplateBinding Header}"                                   
                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"                                  
                          Style="{DynamicResource ExpanderToggleButtonStyle}" />
                                <ContentPresenter x:Name="ExpandSite" Grid.Row="1"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>

        <Menu Height="23" Background="White" BorderBrush="#FFCBCBCB" BorderThickness="0,0,0,1" VerticalAlignment="Top" VerticalContentAlignment="Center">
            <MenuItem Header="文件(F)">
                <MenuItem Header="_New..."  IsCheckable="True"/>
                <MenuItem Header="_Open..." InputGestureText="ctrl+o" />
                <Separator />
                <MenuItem Header="Sen_d To">
                    <MenuItem Header="Mail Recipient" />
                    <MenuItem Header="My Documents" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="操作(A)">
            </MenuItem>
            <MenuItem Header="选项(O)">
                <MenuItem Header="任务数据..."  InputGestureText="Ctrl+T"/>
                <MenuItem Header="_Open..." InputGestureText="ctrl+o" />
                <Separator />
            </MenuItem>
            <MenuItem Header="帮助(H)">
            </MenuItem>
        </Menu>
        <ToolBar ToolBarTray.IsLocked="True" BorderBrush="#FFD8D8D8" BorderThickness="0,0,0,1" Background="White" Height="28" Margin="0,24,0,0" VerticalAlignment="Top" Loaded="ToolBar_Loaded">
            <Button x:Name="_CmdItemAdd" Click="_ToolBar_Button_Click" >
                <Image Source="/Engine;component/Assets/Image/AddNew.ico" />
            </Button>
            <Button x:Name="_CmdItemDel" Click="_ToolBar_Button_Click">
                <Image Source="/Engine;component/Assets/Image/Del_Doc.ico" />
            </Button>
            <Button x:Name="_CmdItemEdit" Click="_ToolBar_Button_Click">
                <Image Source="/Engine;component/Assets/Image/EditDoc.png" />
            </Button>
        </ToolBar>
        <StatusBar Background="#FFF7F7F7" BorderBrush="Gray" BorderThickness="0,1,0,0" Height="22" VerticalAlignment="Bottom">

        </StatusBar>
        <Grid x:Name="_ScheduleFrame" Margin="0,57,0,27">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" />
                <ColumnDefinition Width="3"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" BorderThickness="1" BorderBrush="Gray">
                <TreeView x:Name="tvProperties" Grid.RowSpan="5" Padding="0" Margin="0,0,0,0" HorizontalAlignment="Stretch" BorderThickness="0" SelectedItemChanged="TvProperties_SelectedItemChanged">
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsExpanded" Value="True" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="FontWeight" Value="Normal" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontWeight" Value="Bold" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>

                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type local:PropertyNodeItem}" ItemsSource="{Binding Path=Children}">
                            <StackPanel Orientation="Horizontal">
                                <Image VerticalAlignment="Center" Source="{Binding Icon}" Width="16" Height="16" Margin="0,0,2,2"></Image>
                                <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}"></TextBlock>
                                <Image VerticalAlignment="Center" Source="{Binding EditIcon}" Margin="2,0,0,0"></Image>
                                <StackPanel.ToolTip>
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Name}" TextWrapping="Wrap" MaxWidth="200" ></TextBlock>
                                </StackPanel.ToolTip>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </Border>
            <!-- 添加树形菜单右侧的分割线 -->
            <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" />
            <!-- Grid.Column="2" 根据代码动态添加不同布局-->
            <Border Grid.Column="2" BorderThickness="1" BorderBrush="Gray">
                <Grid x:Name="_ScheduleContent"  />
            </Border>
        </Grid>

    </Grid>
</Window>
